<!-- route for the debt page-->
@page "/debt"


<nav class="navbar navbar-light justify-content-between">
   
    <h1 class="navbar-brand mb-0 h1 fw-bold" style=" background: #7942CE;
        -webkit-text-fill-color: transparent;
        -webkit-background-clip: text;">
        Debts
    </h1>
</nav>

<!--Table to display all debt transactions-->
<table class="table">
   
    <thead>
        <tr>
            
            <th class="align-baseline">
                <div>Tag</div>
            </th> 
            <th class="align-baseline">
                <div>Amount</div>
            </th> 
            <th class="align-baseline">
                <div>Created Date</div>
            </th> 
            <th class="align-baseline">
                <div>Debt Due Date</div>
            </th>
            <th class="align-baseline">
                <div>Debt Source</div>
            </th> 
            <th class="align-baseline">
                <div>Debt Status</div>
            </th> 
            <th class="align-baseline">
                <div>Note</div>
            </th> 
        </tr>
    </thead>

    <!--Table body section containing debt records-->
    <tbody>
        @{
            // Get all transactions and sort them by date (newest first)
            IEnumerable<Transaction> transactionList = _transactions;
            transactionList = transactionList.OrderByDescending(t =>
            t.Date);

            // Loop through each transaction and display its details
            foreach (var transaction in transactionList)
            {
                <tr>
                    <td>@transaction.Tag</td>
                    <td>@transaction.Amount</td>
                    <td>@transaction.Date</td>
                    <td>@transaction.DebtDueDate</td>
                    <td>@transaction.DebtSource</td>
                    <!--Status badge with color coding (green for paid, red for pending)-->
                    <td>
                        <span style="
                                            width: fit-content;
                                            padding: 3px 4px;
                                            border-radius: 5px;
                                            font-size: 11px;
                                            font-weight: bold;
                                            color: white;
                                            background: @(transaction.DebtStatus == DebtStatus.Paid ? "green": "red")
                                ">
                            @transaction.DebtStatus
                        </span>
                    </td>
                    <td>@transaction.Note</td>
                </tr>
            }
        }
    </tbody>
</table>

<!--Code section containing component logic-->
@code {
    // Get the global state (user information) from the cascading parameter
    [CascadingParameter]
    private GlobalState _globalState { get; set; }

    // Properties to store debt-related data
    private double _debtAmount { get; set; } // Total debt amount
    private List<Transaction> _transactions { get; set; } // List of all debt transactions
    private string _curr { get; set; } // Currency symbol for the user

    // Initialize component and load data when page loads
    protected override void OnInitialized()
    {
        // Get all transactions of type 'Debt' for the current user
        _transactions = TransactionService.GetTransactionType(_globalState.CurrentUser.Id, TransactionType.Debt);
        // Get user's preferred currency
        _curr = UsersService.GetCurrency(_globalState.CurrentUser.Id);
    }
}